name: GitHub CI

on:
  push:
    branches: [ master, nightly ]
    tags: [ '**' ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  ci-build:
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - name: Linux
          os: ubuntu-16.04
          target: linux

        - name: Linux mingw64
          os: ubuntu-latest
          target: linux-mingw64

        - name: Mac
          os: macos-latest
          target: mac

    name: ${{ matrix.cfg.name }} ${{ github.ref }}
    runs-on: ${{ matrix.cfg.os }}
    steps:

    - name: Context in env
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        JOB_CONTEXT: ${{ toJson(job) }}
        STEPS_CONTEXT: ${{ toJson(steps) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: ''

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache C++ build output
      uses: actions/cache@v2
      with:
        path: |
          ~/.ccache
        key: ${{ matrix.cfg.target }}-ccache-v1-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ matrix.cfg.target }}-ccache-v1-${{ github.ref }}-
          ${{ matrix.cfg.target }}-ccache-v1-refs/heads/master-
          ${{ matrix.cfg.target }}-ccache-v1-

    - name: Cache Rust deps and build output
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo
          ~/.rustup
          ${{ github.workspace }}/ci-build/dependencies/lib-stracciatella/target
        key: ${{ matrix.cfg.target }}-rust-v1-${{ hashFiles('rust') }}
        restore-keys: |
          ${{ matrix.cfg.target }}-rust-v1-${{ hashFiles('rust') }}
          ${{ matrix.cfg.target }}-rust-v1-

    - name: Set up environment
      shell: bash
      run: ${{ github.workspace }}/.github/scripts/ci-setup.sh 2>&1
      env:
        CI_TARGET: ${{ matrix.cfg.target }}

    - name: Build and run tests
      shell: bash
      run: ${{ github.workspace }}/.github/scripts/ci-build.sh 2>&1
      env:
        CI_NAME: ${{ matrix.cfg.name }}
        CI_OS: ${{ matrix.cfg.os }}
        CI_TARGET: ${{ matrix.cfg.target }}
        CI_REF: ${{ github.ref }}
        SFTP_USER: ${{ secrets.SFTP_USER }}
        SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}

    - name: Publish packages
      shell: bash
      run: ${{ github.workspace }}/.github/scripts/ci-publish.sh 2>&1

    - name: Collect artifacts
      shell: bash
      run: |
        set -e
        set -x
        mkdir artifacts
        for file in ci-build/ja2-stracciatella_*; do
          cp "${file}" artifacts/
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ${{ github.workspace }}/artifacts
